## Usage

Install the package:

```shell
npm i -D svelte-markdoc-preprocess
```

Add the preprocessor and new extensions to your `svelte.config.js`:
```javascript
import { markdoc } from 'svelte-markdoc-preprocess';

const config = {
    preprocess: [
        vitePreprocess(),
        markdoc({
            layouts: {
                default: join(
                    dirname(fileURLToPath(import.meta.url)),
                    './src/lib/Layout.svelte'
                )
            }
        })
    ],
    extensions: ['.markdoc', '.svelte'],
};
```

And use them like this:

```md
<!-- +page.markdoc -->

# I am a heading

I am a paragraph with **bold** words. But you can also use Svelte Components:
```

## Layouts

You can define layouts in the `markdoc` options.

```js
// svelte.config.js
markdoc({
    layouts: {
        default: join(
            dirname(fileURLToPath(import.meta.url)),
            './src/lib/Layout.svelte'
        ),
        some_other_layout: join(
            dirname(fileURLToPath(import.meta.url)),
            './src/lib/SomeOtherLayout.svelte'
        )
    }
})
```

Layout files are basically Svelte components with a slot.


```html
<!-- ./src/lib/Layout.svelte -->
<nav>
    ...
</nav>
<slot />
```

And use them in using the `layout` key in frontmatter. If no layout is defined with frontmatter, the default layout will be used.

```
<!-- +page.markdoc -->
---
layout: some_other_layout
---

# some other content
```

## Nodes

You can use Svelte components in your markdown files, you can define Svelte Component for each node.

Create a Svelte file and export Svelte components with the same name as the node from the module context.


```html
<!-- ./src/lib/Nodes.svelte -->
<script context="module">
    export { default as Heading } from './Heading.svelte';
</script>
```

```js
// svelte.config.js
markdoc({
    nodes: join(dirname(fileURLToPath(import.meta.url)), './src/lib/Nodes.svelte'),
})
```

```html
<!-- ./src/lib/Heading.svelte -->
<script>
    export let level;
</script>

<svelte:element this={`h${level}`}><slot /></svelte:element>
```

You can find a list of available nodes [here](https://markdoc.dev/docs/nodes#built-in-nodes).

## Tags

You can use Svelte components for tags, the same way you do for nodes.

Create a Svelte file and export Svelte components with the same name as the node from the module context.


```html
<!-- ./src/lib/Tags.svelte -->
<script context="module">
    export { default as Multiply } from './Multiply.svelte';
</script>
```

```js
// svelte.config.js
markdoc({
    tags: join(dirname(fileURLToPath(import.meta.url)), './src/lib/Tags.svelte'),
})
```

```html
<!-- ./src/lib/Multiply.svelte -->
<script lang="ts">
    export let a;
    export let b;
</script>

{a} * {b} = {a * b}
```

Now you can use them in your markdown files like this `{{ multiply a=2 b=3 }}`.
